# Copyright (c) 2018 Sebastian Gniazdowski
#
# zflai_check_start
#
# Ensures that the in-memory log-keeper runs and isn't close
# to exit because of being idle for a long time (i.e. close
# to ZFLAI_KEEP_ALIVE). If any of these is false, ensures that
# the log-keeper will quit, and starts a fresh instance. This
# protects from race conditions.
#
# No input, no return value (always 0)

(( $ZFLAI_FD )) && { builtin print -r -u$ZFLAI_FD 2>&$ZFLAI_NULL_FD || { builtin exec {ZFLAI_FD}>&-; ZFLAI_FD=0; }; }

# Running, but dangerously close to idle-exit moment?
if (( ZFLAI_FD != 0 && ZFLAI_LAST_ACTION + ZFLAI_KEEP_ALIVE - 10 < EPOCHSECONDS )); then
    builtin print -u$ZFLAI_FD '!ZFLAI-SPECIAL-CMD: exit' 2>/dev/null
    builtin exec {ZFLAI_FD}>&-
    ZFLAI_FD=0
fi

# Running (not much idle, that was checked above) ?
(( ZFLAI_FD != 0 )) && return 0

# Not running, or closed to prevent race condition - start
# a new agent. The ARGV0 assignment will not work untill
# zflai_memory_keeper is a command not a function.
builtin exec {ZFLAI_FD}> >(ARGV0=zflai-memory-keeper zflai_memory_keeper) || return 1

return 0

# vim:ft=zsh:et
